// <auto-generated />
using Ihor_Projekt_Game.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IhorProjektGame.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ihor_Projekt_Game.Models.CollectionGame", b =>
                {
                    b.Property<int>("CollectionGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollectionGameId"));

                    b.Property<string>("NCompanyCollection")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("Name Company Collection");

                    b.Property<string>("NGameCollection")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("Name Collection game");

                    b.Property<double>("PriseGCollection")
                        .HasColumnType("float")
                        .HasColumnName("Prise game collection");

                    b.Property<double>("YearGCollection")
                        .HasColumnType("float")
                        .HasColumnName(" Developer year at the game collection");

                    b.HasKey("CollectionGameId");

                    b.ToTable("CollectionGame");
                });

            modelBuilder.Entity("Ihor_Projekt_Game.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"));

                    b.Property<string>("NCompany")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("Name Company");

                    b.Property<string>("NGame")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("Name game");

                    b.Property<double>("PriseG")
                        .HasColumnType("float")
                        .HasColumnName("Prise game");

                    b.Property<double>("YearG")
                        .HasColumnType("float")
                        .HasColumnName(" Developer year at the game");

                    b.HasKey("GameId");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("Ihor_Projekt_Game.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("NGenre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("Ihor_Projekt_Game.Models.Genre", b =>
                {
                    b.HasOne("Ihor_Projekt_Game.Models.Game", "Game")
                        .WithOne("Genre")
                        .HasForeignKey("Ihor_Projekt_Game.Models.Genre", "GameId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Ihor_Projekt_Game.Models.Game", b =>
                {
                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
